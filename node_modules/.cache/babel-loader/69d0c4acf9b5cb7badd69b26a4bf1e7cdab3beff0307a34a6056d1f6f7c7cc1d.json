{"ast":null,"code":"// src/firebase/firebase.js\nimport{initializeApp}from'firebase/app';import{getFirestore,collection,addDoc,getDocs,updateDoc,deleteDoc,doc}from'firebase/firestore';// Конфигурация Firebase (получена из консоли Firebase)\nconst firebaseConfig={apiKey:\"AIzaSyD2XnFgALF1ubzJ6c1uLJj9YMpvlD2Nom4\",authDomain:\"lab10-a744d.firebaseapp.com\",projectId:\"lab10-a744d\",storageBucket:\"lab10-a744d.firebasestorage.app\",messagingSenderId:\"949928075075\",appId:\"1:949928075075:web:527993a953d2f7427f59f6\",measurementId:\"G-JC5F574NT4\"};// Инициализация Firebase\nconst app=initializeApp(firebaseConfig);// Инициализация Firestore\nconst db=getFirestore(app);// Функции для работы с Firestore\n// Добавить новую запись (витрату)\nexport const addExpense=async expense=>{try{const docRef=await addDoc(collection(db,\"expenses\"),expense);console.log(\"Document written with ID: \",docRef.id);}catch(e){console.error(\"Error adding document: \",e);}};export const getExpenses=async()=>{const querySnapshot=await getDocs(collection(db,\"expenses\"));let expenses=[];querySnapshot.forEach(doc=>{const data=doc.data();const expenseDate=data.date?new Date(data.date.seconds*1000):new Date();expenses.push({id:doc.id,title:data.title,amount:data.amount,date:expenseDate});});return expenses;};// Обновить запись\nexport const updateExpense=async(id,updatedExpense)=>{const expenseRef=doc(db,\"expenses\",id);await updateDoc(expenseRef,updatedExpense);};// Удалить запись\nexport const deleteExpense=async id=>{const expenseRef=doc(db,\"expenses\",id);await deleteDoc(expenseRef);};","map":{"version":3,"names":["initializeApp","getFirestore","collection","addDoc","getDocs","updateDoc","deleteDoc","doc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","addExpense","expense","docRef","console","log","id","e","error","getExpenses","querySnapshot","expenses","forEach","data","expenseDate","date","Date","seconds","push","title","amount","updateExpense","updatedExpense","expenseRef","deleteExpense"],"sources":["C:/Lab10/Lab9/Lab8/simple-react-app/src/firebase/firebase.js"],"sourcesContent":["// src/firebase/firebase.js\r\n\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getFirestore, collection, addDoc, getDocs, updateDoc, deleteDoc, doc } from 'firebase/firestore';\r\n\r\n// Конфигурация Firebase (получена из консоли Firebase)\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD2XnFgALF1ubzJ6c1uLJj9YMpvlD2Nom4\",\r\n    authDomain: \"lab10-a744d.firebaseapp.com\",\r\n    projectId: \"lab10-a744d\",\r\n    storageBucket: \"lab10-a744d.firebasestorage.app\",\r\n    messagingSenderId: \"949928075075\",\r\n    appId: \"1:949928075075:web:527993a953d2f7427f59f6\",\r\n    measurementId: \"G-JC5F574NT4\"\r\n  };\r\n\r\n// Инициализация Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Инициализация Firestore\r\nconst db = getFirestore(app);\r\n\r\n// Функции для работы с Firestore\r\n\r\n// Добавить новую запись (витрату)\r\nexport const addExpense = async (expense) => {\r\n  try {\r\n    const docRef = await addDoc(collection(db, \"expenses\"), expense);\r\n    console.log(\"Document written with ID: \", docRef.id);\r\n  } catch (e) {\r\n    console.error(\"Error adding document: \", e);\r\n  }\r\n};\r\n\r\nexport const getExpenses = async () => {\r\n  const querySnapshot = await getDocs(collection(db, \"expenses\"));\r\n  let expenses = [];\r\n  querySnapshot.forEach((doc) => {\r\n    const data = doc.data();\r\n    const expenseDate = data.date ? new Date(data.date.seconds * 1000) : new Date(); \r\n    expenses.push({ id: doc.id, title: data.title, amount: data.amount, date: expenseDate });\r\n  });\r\n  return expenses;\r\n};\r\n\r\n// Обновить запись\r\nexport const updateExpense = async (id, updatedExpense) => {\r\n  const expenseRef = doc(db, \"expenses\", id);\r\n  await updateDoc(expenseRef, updatedExpense);\r\n};\r\n\r\n// Удалить запись\r\nexport const deleteExpense = async (id) => {\r\n  const expenseRef = doc(db, \"expenses\", id);\r\n  await deleteDoc(expenseRef);\r\n};\r\n"],"mappings":"AAAA;AAEA,OAASA,aAAa,KAAQ,cAAc,CAC5C,OAASC,YAAY,CAAEC,UAAU,CAAEC,MAAM,CAAEC,OAAO,CAAEC,SAAS,CAAEC,SAAS,CAAEC,GAAG,KAAQ,oBAAoB,CAEzG;AACA,KAAM,CAAAC,cAAc,CAAG,CACnBC,MAAM,CAAE,yCAAyC,CACjDC,UAAU,CAAE,6BAA6B,CACzCC,SAAS,CAAE,aAAa,CACxBC,aAAa,CAAE,iCAAiC,CAChDC,iBAAiB,CAAE,cAAc,CACjCC,KAAK,CAAE,2CAA2C,CAClDC,aAAa,CAAE,cACjB,CAAC,CAEH;AACA,KAAM,CAAAC,GAAG,CAAGhB,aAAa,CAACQ,cAAc,CAAC,CAEzC;AACA,KAAM,CAAAS,EAAE,CAAGhB,YAAY,CAACe,GAAG,CAAC,CAE5B;AAEA;AACA,MAAO,MAAM,CAAAE,UAAU,CAAG,KAAO,CAAAC,OAAO,EAAK,CAC3C,GAAI,CACF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAjB,MAAM,CAACD,UAAU,CAACe,EAAE,CAAE,UAAU,CAAC,CAAEE,OAAO,CAAC,CAChEE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEF,MAAM,CAACG,EAAE,CAAC,CACtD,CAAE,MAAOC,CAAC,CAAE,CACVH,OAAO,CAACI,KAAK,CAAC,yBAAyB,CAAED,CAAC,CAAC,CAC7C,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,WAAW,CAAG,KAAAA,CAAA,GAAY,CACrC,KAAM,CAAAC,aAAa,CAAG,KAAM,CAAAvB,OAAO,CAACF,UAAU,CAACe,EAAE,CAAE,UAAU,CAAC,CAAC,CAC/D,GAAI,CAAAW,QAAQ,CAAG,EAAE,CACjBD,aAAa,CAACE,OAAO,CAAEtB,GAAG,EAAK,CAC7B,KAAM,CAAAuB,IAAI,CAAGvB,GAAG,CAACuB,IAAI,CAAC,CAAC,CACvB,KAAM,CAAAC,WAAW,CAAGD,IAAI,CAACE,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACH,IAAI,CAACE,IAAI,CAACE,OAAO,CAAG,IAAI,CAAC,CAAG,GAAI,CAAAD,IAAI,CAAC,CAAC,CAC/EL,QAAQ,CAACO,IAAI,CAAC,CAAEZ,EAAE,CAAEhB,GAAG,CAACgB,EAAE,CAAEa,KAAK,CAAEN,IAAI,CAACM,KAAK,CAAEC,MAAM,CAAEP,IAAI,CAACO,MAAM,CAAEL,IAAI,CAAED,WAAY,CAAC,CAAC,CAC1F,CAAC,CAAC,CACF,MAAO,CAAAH,QAAQ,CACjB,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,aAAa,CAAG,KAAAA,CAAOf,EAAE,CAAEgB,cAAc,GAAK,CACzD,KAAM,CAAAC,UAAU,CAAGjC,GAAG,CAACU,EAAE,CAAE,UAAU,CAAEM,EAAE,CAAC,CAC1C,KAAM,CAAAlB,SAAS,CAACmC,UAAU,CAAED,cAAc,CAAC,CAC7C,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,aAAa,CAAG,KAAO,CAAAlB,EAAE,EAAK,CACzC,KAAM,CAAAiB,UAAU,CAAGjC,GAAG,CAACU,EAAE,CAAE,UAAU,CAAEM,EAAE,CAAC,CAC1C,KAAM,CAAAjB,SAAS,CAACkC,UAAU,CAAC,CAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}