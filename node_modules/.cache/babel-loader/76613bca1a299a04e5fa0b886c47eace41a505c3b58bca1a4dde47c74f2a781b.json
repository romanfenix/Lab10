{"ast":null,"code":"// src/firebase/firebase.js\n\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, addDoc, getDocs, updateDoc, deleteDoc, doc } from 'firebase/firestore';\n\n// Конфигурация Firebase (получена из консоли Firebase)\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD2XnFgALF1ubzJ6c1uLJj9YMpvlD2Nom4\",\n  authDomain: \"lab10-a744d.firebaseapp.com\",\n  projectId: \"lab10-a744d\",\n  storageBucket: \"lab10-a744d.firebasestorage.app\",\n  messagingSenderId: \"949928075075\",\n  appId: \"1:949928075075:web:527993a953d2f7427f59f6\",\n  measurementId: \"G-JC5F574NT4\"\n};\n\n// Инициализация Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Инициализация Firestore\nconst db = getFirestore(app);\n\n// Функции для работы с Firestore\n\n// Добавить новую запись (витрату)\nexport const addExpense = async expense => {\n  try {\n    const docRef = await addDoc(collection(db, \"expenses\"), expense);\n    console.log(\"Document written with ID: \", docRef.id);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n  }\n};\n\n// Получить все записи\nexport const getExpenses = async () => {\n  const querySnapshot = await getDocs(collection(db, \"expenses\"));\n  let expenses = [];\n  querySnapshot.forEach(doc => {\n    expenses.push({\n      id: doc.id,\n      ...doc.data()\n    });\n  });\n  return expenses;\n};\n\n// Обновить запись\nexport const updateExpense = async (id, updatedExpense) => {\n  const expenseRef = doc(db, \"expenses\", id);\n  await updateDoc(expenseRef, updatedExpense);\n};\n\n// Удалить запись\nexport const deleteExpense = async id => {\n  const expenseRef = doc(db, \"expenses\", id);\n  await deleteDoc(expenseRef);\n};","map":{"version":3,"names":["initializeApp","getFirestore","collection","addDoc","getDocs","updateDoc","deleteDoc","doc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","addExpense","expense","docRef","console","log","id","e","error","getExpenses","querySnapshot","expenses","forEach","push","data","updateExpense","updatedExpense","expenseRef","deleteExpense"],"sources":["C:/Lab10/Lab9/Lab8/simple-react-app/src/firebase/firebase.js"],"sourcesContent":["// src/firebase/firebase.js\r\n\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getFirestore, collection, addDoc, getDocs, updateDoc, deleteDoc, doc } from 'firebase/firestore';\r\n\r\n// Конфигурация Firebase (получена из консоли Firebase)\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD2XnFgALF1ubzJ6c1uLJj9YMpvlD2Nom4\",\r\n    authDomain: \"lab10-a744d.firebaseapp.com\",\r\n    projectId: \"lab10-a744d\",\r\n    storageBucket: \"lab10-a744d.firebasestorage.app\",\r\n    messagingSenderId: \"949928075075\",\r\n    appId: \"1:949928075075:web:527993a953d2f7427f59f6\",\r\n    measurementId: \"G-JC5F574NT4\"\r\n  };\r\n  \r\n// Инициализация Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Инициализация Firestore\r\nconst db = getFirestore(app);\r\n\r\n// Функции для работы с Firestore\r\n\r\n// Добавить новую запись (витрату)\r\nexport const addExpense = async (expense) => {\r\n  try {\r\n    const docRef = await addDoc(collection(db, \"expenses\"), expense);\r\n    console.log(\"Document written with ID: \", docRef.id);\r\n  } catch (e) {\r\n    console.error(\"Error adding document: \", e);\r\n  }\r\n};\r\n\r\n// Получить все записи\r\nexport const getExpenses = async () => {\r\n  const querySnapshot = await getDocs(collection(db, \"expenses\"));\r\n  let expenses = [];\r\n  querySnapshot.forEach((doc) => {\r\n    expenses.push({ id: doc.id, ...doc.data() });\r\n  });\r\n  return expenses;\r\n};\r\n\r\n// Обновить запись\r\nexport const updateExpense = async (id, updatedExpense) => {\r\n  const expenseRef = doc(db, \"expenses\", id);\r\n  await updateDoc(expenseRef, updatedExpense);\r\n};\r\n\r\n// Удалить запись\r\nexport const deleteExpense = async (id) => {\r\n  const expenseRef = doc(db, \"expenses\", id);\r\n  await deleteDoc(expenseRef);\r\n};\r\n"],"mappings":"AAAA;;AAEA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEC,SAAS,EAAEC,GAAG,QAAQ,oBAAoB;;AAEzG;AACA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,6BAA6B;EACzCC,SAAS,EAAE,aAAa;EACxBC,aAAa,EAAE,iCAAiC;EAChDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAEH;AACA,MAAMC,GAAG,GAAGhB,aAAa,CAACQ,cAAc,CAAC;;AAEzC;AACA,MAAMS,EAAE,GAAGhB,YAAY,CAACe,GAAG,CAAC;;AAE5B;;AAEA;AACA,OAAO,MAAME,UAAU,GAAG,MAAOC,OAAO,IAAK;EAC3C,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMjB,MAAM,CAACD,UAAU,CAACe,EAAE,EAAE,UAAU,CAAC,EAAEE,OAAO,CAAC;IAChEE,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,MAAM,CAACG,EAAE,CAAC;EACtD,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVH,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAED,CAAC,CAAC;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,aAAa,GAAG,MAAMvB,OAAO,CAACF,UAAU,CAACe,EAAE,EAAE,UAAU,CAAC,CAAC;EAC/D,IAAIW,QAAQ,GAAG,EAAE;EACjBD,aAAa,CAACE,OAAO,CAAEtB,GAAG,IAAK;IAC7BqB,QAAQ,CAACE,IAAI,CAAC;MAAEP,EAAE,EAAEhB,GAAG,CAACgB,EAAE;MAAE,GAAGhB,GAAG,CAACwB,IAAI,CAAC;IAAE,CAAC,CAAC;EAC9C,CAAC,CAAC;EACF,OAAOH,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAMI,aAAa,GAAG,MAAAA,CAAOT,EAAE,EAAEU,cAAc,KAAK;EACzD,MAAMC,UAAU,GAAG3B,GAAG,CAACU,EAAE,EAAE,UAAU,EAAEM,EAAE,CAAC;EAC1C,MAAMlB,SAAS,CAAC6B,UAAU,EAAED,cAAc,CAAC;AAC7C,CAAC;;AAED;AACA,OAAO,MAAME,aAAa,GAAG,MAAOZ,EAAE,IAAK;EACzC,MAAMW,UAAU,GAAG3B,GAAG,CAACU,EAAE,EAAE,UAAU,EAAEM,EAAE,CAAC;EAC1C,MAAMjB,SAAS,CAAC4B,UAAU,CAAC;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}